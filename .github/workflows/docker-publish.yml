name: Build and Publish Multi-arch Docker Image

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: hahihula/eim-idf-build
  DOCKER_IMAGE_TAG: latest

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_IMAGE_NAME }}:amd64-${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:buildcache-amd64
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:buildcache-amd64,mode=max
          build-args: |
            TARGETARCH=amd64

  build-arm64:
    runs-on: macos-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build and push ARM64 image
        if: github.event_name != 'pull_request'
        run: |
          docker build --platform linux/arm64 \
            --build-arg TARGETARCH=arm64 \
            -t ${{ env.DOCKER_IMAGE_NAME }}:arm64-${{ env.DOCKER_IMAGE_TAG }} .
          docker push ${{ env.DOCKER_IMAGE_NAME }}:arm64-${{ env.DOCKER_IMAGE_TAG }}

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Create and push the multi-arch manifest
      - name: Create and push manifest
        run: |
          docker buildx imagetools create -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} \
            ${{ env.DOCKER_IMAGE_NAME }}:amd64-${{ env.DOCKER_IMAGE_TAG }} \
            ${{ env.DOCKER_IMAGE_NAME }}:arm64-${{ env.DOCKER_IMAGE_TAG }}

          docker buildx imagetools create -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.DOCKER_IMAGE_NAME }}:amd64-${{ env.DOCKER_IMAGE_TAG }} \
            ${{ env.DOCKER_IMAGE_NAME }}:arm64-${{ env.DOCKER_IMAGE_TAG }}
